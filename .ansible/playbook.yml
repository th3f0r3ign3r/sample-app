---
- hosts: my_vm
  become: true
  tasks:
    - name: Ensure Ubuntu is up to date
      apt:
        update_cache: yes
        upgrade: dist

    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present

    - name: Ensure Docker is started
      service:
        name: docker
        state: started
        enabled: true

    - name: Ensure MySQL client is installed (for Ubuntu/Debian)
      apt:
        name: mysql-client
        state: present
      when: ansible_os_family == "Debian"

    - name: Pull the Docker image from Docker Hub
      docker_image:
        name: th3f0r31gn3r/sample-app:latest
        source: pull

    - name: Pull MySQL Docker image from Docker Hub
      docker_image:
        name: mysql:5.7
        source: pull

    - name: Run the MySQL container
      docker_container:
        name: db
        image: mysql:5.7
        state: started
        restart_policy: always
        ports:
          - "3306:3306"
        env:
          MYSQL_DATABASE: app_database
          MYSQL_USER: app_user
          MYSQL_PASSWORD: app_password
          MYSQL_ROOT_PASSWORD: app_root_password
        volumes:
          - db_data:/var/lib/mysql

    - name: Wait for MySQL to start
      wait_for:
        host: 127.0.0.1
        port: 3306
        delay: 10
        timeout: 300
        state: started

    - name: Test MySQL connection
      command: mysql -h 127.0.0.1 -u app_user -papp_password -e "SHOW DATABASES;"
      # register: mysql_test_result
      # ignore_errors: yes

    # - name: Check MySQL connection result
    #   debug:
    #     msg: "{{ mysql_test_result.stdout }}"

    - name: Run the app docker container
      docker_container:
        name: app
        image: th3f0r31gn3r/sample-app:latest
        state: started
        restart_policy: always
        ports:
          - "80:80"

    # - name: List all containers
    #   docker_container_info:
    #     name: '*'
    #   register: docker_containers

    # - name: Debug container info
    #   debug:
    #     msg: "{{ docker_containers }}"
